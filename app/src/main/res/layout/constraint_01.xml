<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <!-- 1. 정가운데로 위치시키기 -->

    <TextView
        android:id="@+id/view1"
        android:layout_width="50dp"
        android:layout_height="50dp"
        android:background="@color/black"
        android:text="Android1"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!-- 2. 필요한 만큼 제약 주기 -->
    <TextView
        android:id="@+id/view2"
        android:layout_width="50dp"
        android:layout_height="50dp"
        android:layout_marginLeft="56dp"
        android:layout_marginTop="66dp"
        android:background="@color/black"
        android:gravity="center"
        android:text="Android2"
        android:textColor="@color/white"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!-- 3. 특정 뷰 기준으로 제약 주기 -->
    <TextView
        android:id="@+id/view3"
        android:layout_width="50dp"
        android:layout_height="50dp"
        android:layout_marginLeft="56dp"
        android:background="@color/black"
        android:gravity="center"
        android:text="Android3"
        android:textColor="@color/white"
        app:layout_constraintStart_toEndOf="@id/view2"
        app:layout_constraintTop_toTopOf="@id/view2" />

    <!-- 4. 특정 뷰 2개를 활용 -->
    <TextView
        android:id="@+id/view4"
        android:layout_width="50dp"
        android:layout_height="50dp"
        android:layout_marginTop="30dp"
        android:background="@color/black"
        android:gravity="center"
        android:text="Android4"
        android:textColor="@color/white"
        app:layout_constraintEnd_toEndOf="@id/view3"
        app:layout_constraintStart_toStartOf="@id/view2"
        app:layout_constraintTop_toBottomOf="@id/view2" />

    <!-- 5. 체인 개념을 꼭 알자
        chainStyle - packed, spread, spread-inside
        bias - 0 ~ 1 (0.5)가운데
        수직, 수평 따로 존재한다.
    -->
    <TextView
        android:id="@+id/view5"
        android:layout_width="100dp"
        android:layout_height="100dp"
        android:layout_marginTop="30dp"
        android:background="@color/black"
        android:gravity="center"
        android:text="Android5"
        android:textColor="@color/white"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toStartOf="@id/view6"
        app:layout_constraintHorizontal_chainStyle="packed"
        app:layout_constraintHorizontal_bias="0.8"
        app:layout_constraintStart_toStartOf="parent" />

    <TextView
        android:id="@+id/view6"
        android:layout_width="100dp"
        android:layout_height="100dp"
        android:layout_marginTop="30dp"
        android:background="@color/black"
        android:gravity="center"
        android:text="Android6"
        android:textColor="@color/white"
        app:layout_constraintBottom_toBottomOf="@id/view5"
        app:layout_constraintEnd_toStartOf="@id/view7"
        app:layout_constraintStart_toEndOf="@id/view5" />

    <TextView
        android:id="@+id/view7"
        android:layout_width="100dp"
        android:layout_height="100dp"
        android:layout_marginTop="30dp"
        android:background="@color/black"
        android:gravity="center"
        android:text="Android7"
        android:textColor="@color/white"
        android:visibility="visible"
        app:layout_constraintBottom_toBottomOf="@id/view5"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toEndOf="@id/view6" />


</androidx.constraintlayout.widget.ConstraintLayout>